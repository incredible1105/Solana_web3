name: Pull requests

on:
  pull_request:
    branches: [master]

env:
  # Enables Turborepo Remote Caching.
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
  TURBO_TEAM: ${{ secrets.TURBO_TEAM }}

jobs:
  # Needed for grouping check-web3 strategies into one check for mergify
  all-web3-checks:
    runs-on: ubuntu-latest
    needs:
      - build-and-test
    steps:
      - run: echo "Done"

  web3-commit-lint:
    name: Validate commit message
    runs-on: ubuntu-latest
    # Set to true in order to avoid cancelling other workflow jobs.
    # Mergify will still require web3-commit-lint for automerge
    continue-on-error: true

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          # Need to fetch the base SHA so that it can be compared with the head SHA.
          fetch-depth: 0

      - name: Install package manager
        uses: pnpm/action-setup@v2
        with:
          version: 7.26.3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Check that commit message conforms to Semantic Release format
        if: ${{ github.event_name == 'pull_request' }}
        run: bash commitlint.sh
        env:
          COMMIT_RANGE: ${{ github.event.pull_request.base.sha }}..${{ github.event.pull_request.head.sha }}

  build-and-test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node:
          - '14'
          - '16'

    name: Build & Test on Node ${{ matrix.node }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install package manager
        uses: pnpm/action-setup@v2
        with:
          version: 7.26.3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Get Test Validator Latest Release
        id: get-test-validator-version
        run: |
          echo "version=$(./scripts/get-latest-validator-release-version.sh)" >> $GITHUB_OUTPUT
        shell: bash

      - name: Cache Test Validator
        id: cache-test-validator
        uses: actions/cache@v3
        with:
          path: /home/runner/.local/share/solana
          key: ${{ runner.os }}-test-validator-${{ steps.get-test-validator-version.outputs.version }}

      - name: Install Test Validator
        if: steps.cache-test-validator.outputs.cache-hit != 'true'
        run: scripts/setup-test-validator.sh

      - name: Build & Test
        run: pnpm build
